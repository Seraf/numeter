#!/usr/bin/env python
#
# Plugin to monitor redis data in numeter collector
#
# Magic markers
#%# capabilities=autoconf
#%# family=auto
#
#  [numeter_collector_redis_datas]
#  env.redisHost
#  env.redisPort
#  env.redisTimeout
#  env.redisDb
#  env.redisPassword

import sys
import os

try: 
    from numeter_collector import myCollector
except ImportError:
    IMPORT_COLLECTOR = False
else:
    IMPORT_COLLECTOR = True

try: 
    from myRedisConnect import myRedisConnect
except ImportError:
    IMPORT_REDIS = False
else:
    IMPORT_REDIS = True

def print_config():
    print 'graph_title Numeter collector hosts datas in redis'
    print 'graph_info This graph show the number of datas in collector for all hosts'
    print 'graph_vlabel Number'
    print 'graph_args --base 1000 --lower-limit 0'
    print 'graph_category numeter'
    # Data
    print 'datas.label Datas in redis'
    print 'datas.draw AREA'
    print 'datas.color #909122'

def load_params():
    global REDIS_HOST
    global REDIS_PORT
    global REDIS_TIMEOUT
    global REDIS_DB
    global REDIS_PASSWORD

    REDIS_HOST      = os.getenv('redisHost','127.0.0.1')
    REDIS_PORT      = os.getenv('redisPort', 6379)
    REDIS_TIMEOUT   = os.getenv('redisTimeout', 10)
    REDIS_DB        = os.getenv('redisDb', 1)
    REDIS_PASSWORD  = os.getenv('redisPassword', None)


def print_values():
    redis_connexion = myRedisConnect(host=REDIS_HOST,
                      port=REDIS_PORT,
                      socket_timeout=REDIS_TIMEOUT,
                      db=REDIS_DB,
                      password=REDIS_PASSWORD)

    if not redis_connexion.redis_info():
        print("Redis server connexion ERROR - "
        + "Check server access or the password")
        exit(1)

    keys  = redis_connexion.redis_hkeys('HOSTS')
    if not keys:
        print 'datas.value U'
        return
    num_ts = 0
    for key in keys:
        hostid = redis_connexion.redis_hget('HOSTS', key)
        num_ts += int(redis_connexion.redis_zcount('DATAS@' + hostid, '-inf', '+inf'))

    print 'datas.value %s' % num_ts


if __name__ == '__main__':
    ARGV = sys.argv[:]
    if len(ARGV) > 1:
        if ARGV[1] == 'config':
            print_config()
        elif ARGV[1] == 'autoconf':
            if not (IMPORT_REDIS and IMPORT_COLLECTOR):
                print 'no (failed import redis or collector module)'
                sys.exit(0)
            print 'yes'

    elif IMPORT_REDIS and IMPORT_COLLECTOR:
        load_params()
        print_values()
