#!/usr/bin/env bash

#./run_tests -- -c nose.cfg

function usage {
  echo "Usage: $0 [OPTION]..."
  echo "Run Tempest test suite"
  echo ""
  echo "  -p, --pep8               Just run pep8"
  echo "  -h, --help               Print this usage message"
  echo "  -f, --functional         Functional tests only"
  echo "  -u, --unit               Unit tests only"
  echo "  -- [NOSEOPTIONS]         After the first '--' you can pass arbitrary arguments to nosetests "
}

noseargs=""
wrapper=""
do_pep8=0
do_unit=0
do_functional=0

if ! options=$(getopt -o fuph -l functional,unit,pep8,help -- "$@")
then
    # parse error
    usage
    exit 1
fi

eval set -- $options
first_uu=yes
while [ $# -gt 0 ]; do
  case "$1" in
    -h|--help) usage; exit;;
    -p|--pep8) let do_pep8=1;;
    -u|--unit) let do_unit=1;;
    -f|--functional) let do_functional=1;;
    --) [ "yes" == "$first_uu" ] || noseargs="$noseargs $1"; first_uu=no  ;;
    *) noseargs="$noseargs $1"
  esac
  shift
done

NOSETESTS="nosetests $noseargs"
FUNCTIONAL=tests/functional
UNIT=tests/units

function run_unit_tests {
  ${wrapper} $NOSETESTS $UNIT
}

function run_functional_tests {
  ${wrapper} $NOSETESTS $FUNCTIONAL
}

function run_pep8 {
  echo "Running pep8 ..."
  ${wrapper} flake8
}

if [ $do_pep8 -eq 1 ]; then
    run_pep8
    exit
fi

if [ $do_unit -eq 1 ]; then
    run_unit_tests
    exit
fi

if [ $do_functional -eq 1 ]; then
    run_functional_tests
    exit
fi

run_unit_tests
run_functional_tests

retval=$?
exit $retval
