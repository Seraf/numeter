*************
Documentation
*************

Informations
============

This module is a Web server created for visualize data from Storage(s). In few lines Webapp purposes followings stuff:
  * Authentication and authorization made by user and group management
  * Multiple storga management
  * REST API interface
  * Storages' API centralization

Unlike other web graph system, Numeter doesn't only purpose a graph tree. It allow users to organize Data Sources in custom level of displaying.

WebApp is completly independant from other Numeter modules. The only connection point is Storage's REST API.

External Links
==============

Troubleshooting
===============

Configuration
=============

Webapp configuration is located in ``/etc/numeter/numeter_webapp.cfg```. 

``database`` section
--------------------
``engine``
^^^^^^^^^^
.. warning::
    Required

This setting defines which database backend will be used. Choose among Django engine or a custom. Default Django's engines are:
    * ``django.db.backends.mysql``
    * ``django.db.backends.postgresql_psycopg2``
    * ``django.db.backends.sqlite3``
    * ``django.db.backends.oracle``

You can use a database backend that doesn't ship with Django by setting ENGINE to a fully-qualified path (i.e. ``mypackage.backends.whatever``).

Example::

    engine = django.db.backends.sqlite3

``name``
^^^^^^^^
.. warning::
    Required

This setting defines name of the database to use. For SQLite, it's the full path to the database file.

Examples::

    name = numeter
    name = /var/db/numeter.db # with Sqlite

``user``
^^^^^^^^
.. note::
    Not required with Sqlite

This setting defines username to use when connecting to the database.

Example::

    user = numeter

``password``
^^^^^^^^^^^^
.. note::
    Not required with Sqlite

This setting defines password to use when connecting to the database.

Example::

    password = yourpass

``host``
^^^^^^^^
.. note::
    Optionnal

This setting defines host to use when connecting to the database. An empty string means localhost.

Example::

    host = db.my.lan

``port``
^^^^^^^^
.. note::
    Optionnal

This setting defines port to use when connecting to the database. An empty string means the default port.

Example::

    port = 3306

``cache`` section
-----------------
``use_cache``
^^^^^^^^^^^^^

.. note::
    Optionnal, defaults to ``False``.

This setting defines if a cache backend will be used.

Example::

    use_cache = True

``location``
^^^^^^^^^^^^
.. warning::
    Required if ``use_cache = True``

This setting defines location of the cache to use. This might be the directory for a file system cache, a host and port for a memcache server, or simply an identifying name for a local memory cache.

Example::

    location = unix:/var/run/memcached.sock

``timeout``
^^^^^^^^^^^
.. note::
    Optionnal, defaults to ``300``.

This setting defines number of seconds before a cache entry is considered stale.

Example::

    timeout = 3000


``max_entries``
^^^^^^^^^^^^^^^
.. note::
    Optionnal, defaults to ``300``.

This setting defines maximum number of entries allowed in the cache before old values are deleted.

Example::

    max_entries = 3000



``storage`` section
-------------------
``timeout``
^^^^^^^^^^^
.. note::
    Optionnal, defaults to ``5``.

This setting defines timeout for connection to storages.

Example::

    timeout = 10


``global`` section
-------------------
``admins``
^^^^^^^^^^^
.. warning::
    Required

This setting is a tuple that lists people who get code error notifications.

Example::

    admins = [ ('admin', 'admin@locahost') ]

``allowed_hosts``
^^^^^^^^^^^^^^^^^
.. note::
    Optionnal, defaults to ``['*']``.

This setting is a list of strings representing the host/domain names that this site can serve. `String ``'*'`` representing all.

Example::

    admins = ['numeter.my.lan','numeter.lan']

``timezone``
^^^^^^^^^^^^
.. warning::
    Required

This setting defines time zone for this installation.

Example::

    timezone = Europe/Paris


``language_code``
^^^^^^^^^^^^^^^^^
.. note::
    Optionnal, defaults to ``en-us``.

This setting defines default language of website.

Example::

    language_code = en-us


``media_root``
^^^^^^^^^^^^^^
.. note::
    Optionnal, defaults to ``/var/www/numeter/media/``.

This setting defines location of media files. In facts, a folder named graphlib will be created in. And each folder inside will be a graphic JavaScript library which user will choose.

By default ``media_root``'s tree is the following: ::

    media_root
    |- graphlib
       |- dygraph
          |- dygraph-combined.js
          |- dygraph-numeter.js

The default JavaScript library is Dygraph.

Example::

    media_root = /var/www/numeter/media/


``secret_key_file``
^^^^^^^^^^^^^^^^^^^
.. note::
    Optionnal, defaults to ``/etc/numeter/secret_key.txt``.

This setting defines location of secret key file.

Example::

    media_root = /etc/key.txt

``logging`` section
-------------------
``use_logging``
^^^^^^^^^^^^^^^
.. note::
    Optionnal, defaults to ``False``.

This setting defines if logging will be used. Be sure to have correct logging locations with writing rigth, else webapp won't launch.

Example::

    use_logging = False

``info_file``
^^^^^^^^^^^^^
.. note::
    Optionnal, defaults to ``/var/log/numeter/webapp/info.log``.

This setting defines location of info log file.

Example::

    info_file = /tmp/info.log

``error_file``
^^^^^^^^^^^^^^

.. note::
    Optionnal, defaults to ``/var/log/numeter/webapp/error.log``.

This setting defines location of error log file.

Example::

    error_file = /tmp/error.log


``file_size``
^^^^^^^^^^^^^

.. note::
    Optionnal, defaults to ``1000000``.

This setting defines size of log file before rotate. Size is in byte.

Example::

    file_size = 2000000
